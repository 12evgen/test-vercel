name: Create Release

on:
  workflow_dispatch:

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Setup Node.js v18
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install dependencies
      run: npm clean-install

    - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
      run: npm audit signatures

    - name: Release
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_NEW_TOKEN }}
      run: npx semantic-release --branches main

    - name: Gets latest created release info
      id: latest_release_info
      uses: jossef/action-latest-release-info@v1.2.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

    - name: Build project assets
      run: |
        vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        zip ${{ steps.latest_release_info.outputs.tag_name }}.zip .vercel -r  

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
        asset_path: ./${{ steps.latest_release_info.outputs.tag_name }}.zip
        asset_name: ${{ steps.latest_release_info.outputs.tag_name }}.zip
        asset_content_type: application/gzip
