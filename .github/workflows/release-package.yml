name: Publish package to GitHub Packages

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  publish-gpr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@12evgen'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel project settings
        run: vercel pull --environment=production --yes --token=${{ secrets.VERCEL_TOKEN }}

      - name: npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc   
          echo "@12evgen:registry=https://npm.pkg.github.com/" >> .npmrc
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: check if the package already exist
        id: publish
        run: |
          VERSION=$(awk '/version/{print $NF}'  package.json  | tr -d '",')
          PUBLISH=$(npm info  @12evgen/test-vercel@${VERSION} --json | sed -n 's/homepage/&/p' | wc -l)
          if [ $PUBLISH -eq 0 ]
          then
            echo "::set-output name=alreadyPublished::false"
          else
            echo "skipping publish, package @12evgen/test-vercel@${VERSION} already published"
            echo "::set-output name=alreadyPublished::true"
          fi

      - name: Build Project Artifacts
        if: steps.publish.outputs.alreadyPublished == 'false'
        run: vercel build --token ${{ secrets.VERCEL_TOKEN }}
      - name: Create .npmrc file
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .vercel/.npmrc
      - name: Publish
        if: steps.publish.outputs.alreadyPublished == 'false'
        run: npm publish .vercel --access public
